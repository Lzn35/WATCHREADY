{% extends "base.html" %}

{% block title %}Major Cases - Students - WATCH{% endblock %}

{% block extra_css %}
<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='plugins/datatables/css/dataTables.bootstrap4.min.css') }}">
<link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='plugins/datatables/css/responsive.bootstrap4.min.css') }}">

<style>
/* Remove table row highlighting */
.table tbody tr:hover {
	background-color: transparent !important;
}

.table tbody tr:nth-child(even) {
	background-color: transparent !important;
}

.table tbody tr:nth-child(odd) {
	background-color: transparent !important;
}

/* Remove DataTables default styling */
table.dataTable tbody tr:hover {
	background-color: transparent !important;
}

table.dataTable tbody tr.odd {
	background-color: transparent !important;
}

table.dataTable tbody tr.even {
	background-color: transparent !important;
}
</style>
{% endblock %}

{% block content %}
<div class="pd-20 card-box mb-30">
	<div class="clearfix mb-3">
		<div class="pull-left">
			<h4 class="text-red h4">
				<i class="bi bi-exclamation-triangle" style="margin-right: 8px;"></i>
				Major Cases - Students
			</h4>
		</div>
	</div>
	
	<!-- Search and Actions Row -->
	<div class="d-flex justify-content-between align-items-center mb-3" style="gap: 15px;">
		<!-- Search Section -->
		<div class="flex-grow-1" style="max-width: 300px;">
			<div class="form-group mb-0">
				<label for="searchInput" class="mb-1">Search name:</label>
				<input type="text" class="form-control" id="searchInput" placeholder="Enter name to search...">
			</div>
		</div>
		
		<!-- Action Buttons -->
		<div class="d-flex align-items-center" style="gap: 10px;">
			<button class="btn btn-success" onclick="generateReport()">
				<i class="bi bi-file-earmark-pdf" style="margin-right: 5px;"></i>Generate Report
			</button>
			<button class="btn btn-danger" data-toggle="modal" data-target="#addCaseModal">
				<i class="bi bi-plus-circle" style="margin-right: 5px;"></i>Add Student Case
			</button>
		</div>
	</div>
	
	
	<div class="table-responsive">
		<table id="casesTable" class="table table-striped table-bordered" style="width:100%">
			<thead>
				<tr>
					<th>Student Name</th>
					<th>Program</th>
					<th>Section</th>
					<th>Major Cases Count</th>
					<th>Latest Case Date</th>
					<th>Attachment</th>
					<th>Actions</th>
				</tr>
			</thead>
			<tbody id="personsTableBody">
				<!-- Data will be loaded via JavaScript -->
			</tbody>
		</table>
	</div>
</div>

<!-- Add Case Modal -->
<div class="modal fade" id="addCaseModal" tabindex="-1" role="dialog" aria-labelledby="addCaseModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title" id="addCaseModalLabel">
					<i class="bi bi-plus-circle" style="margin-right: 8px;"></i>Add New Student Case
				</h5>
				<button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form method="POST" action="{{ url_for('cases.add_major_case', entity_type='student') }}" enctype="multipart/form-data">
									<div class="modal-body">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="last_name">Last Name <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="last_name" name="last_name" required maxlength="100">
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="first_name">First Name <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="first_name" name="first_name" required maxlength="100">
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="program_or_dept">Program <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="program_or_dept" name="program_or_dept" required maxlength="100">
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="section">Section <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="section" name="section" required maxlength="50">
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="date">Date <span class="text-danger">*</span></label>
								<input type="date" class="form-control" id="date" name="date" required>
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="ocr_extract">Quick Fill Options</label>
								<div class="btn-group" role="group">
									<button type="button" class="btn btn-outline-info" id="ocrExtractBtn">
										<i class="bi bi-camera" style="margin-right: 5px;"></i>OCR Extract
									</button>
									<button type="button" class="btn btn-outline-secondary" id="clearFormBtn">
										<i class="bi bi-arrow-clockwise" style="margin-right: 5px;"></i>Clear
									</button>
								</div>
							</div>
						</div>
					</div>
					<div class="form-group">
						<label for="description">
							<i class="bi bi-file-text" style="margin-right: 5px;"></i>Description
							<small class="text-muted">(What happened? Details of the incident)</small>
						</label>
						<textarea class="form-control" id="description" name="description" rows="4" maxlength="1000" placeholder="Enter detailed description of the incident..."></textarea>
					</div>
					<div class="form-group">
						<label for="remarks">
							<i class="bi bi-chat-dots" style="margin-right: 5px;"></i>Remarks
							<small class="text-muted">(Additional notes, actions taken, or comments)</small>
						</label>
						<textarea class="form-control" id="remarks" name="remarks" rows="4" maxlength="1000" placeholder="Enter additional remarks or notes..."></textarea>
					</div>
					<!-- File Upload Section for Major Cases Only -->
					<div class="form-group">
						<label for="attachment">
							<i class="bi bi-paperclip" style="margin-right: 5px;"></i>Attachment
							<small class="text-muted">(Optional - PDF, DOC, Images, etc. Max 10MB)</small>
						</label>
						<input type="file" class="form-control-file" id="attachment" name="attachment" 
							   accept=".pdf,.doc,.docx,.txt,.jpg,.jpeg,.png,.gif,.bmp,.mp4,.avi,.mov,.wmv,.mp3,.wav,.zip,.rar,.7z">
						<small class="form-text text-muted">
							Supported formats: PDF, DOC, DOCX, TXT, JPG, PNG, MP4, MP3, ZIP, etc.
						</small>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-danger">
						<i class="bi bi-check-circle" style="margin-right: 5px;"></i>Add Case
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Edit Case Modals -->
{% for case in cases %}
<div class="modal fade" id="editModal-{{ case.id }}" tabindex="-1" role="dialog" aria-labelledby="editModalLabel-{{ case.id }}" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title" id="editModalLabel-{{ case.id }}">
					<i class="bi bi-pencil" style="margin-right: 8px;"></i>Edit Student Case
				</h5>
				<button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form method="POST" action="{{ url_for('cases.edit_major_case', case_id=case.id) }}" enctype="multipart/form-data">
									<div class="modal-body">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="edit_last_name_{{ case.id }}">Last Name <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="edit_last_name_{{ case.id }}" name="last_name" value="{{ case.last_name }}" required maxlength="100">
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="edit_first_name_{{ case.id }}">First Name <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="edit_first_name_{{ case.id }}" name="first_name" value="{{ case.first_name }}" required maxlength="100">
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="edit_program_or_dept_{{ case.id }}">Program <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="edit_program_or_dept_{{ case.id }}" name="program_or_dept" value="{{ case.program_or_dept }}" required maxlength="100">
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="edit_section_{{ case.id }}">Section <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="edit_section_{{ case.id }}" name="section" value="{{ case.section or '' }}" required maxlength="50">
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="edit_date_{{ case.id }}">Date <span class="text-danger">*</span></label>
								<input type="date" class="form-control" id="edit_date_{{ case.id }}" name="date" value="{{ case.date.strftime('%Y-%m-%d') }}" required>
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label>&nbsp;</label>
								<div class="btn-group" role="group">
									<button type="button" class="btn btn-outline-info" onclick="extractOCRForEdit(this)" data-case-id="{{ case.id }}">
										<i class="bi bi-camera" style="margin-right: 5px;"></i>OCR Extract
									</button>
								</div>
							</div>
						</div>
					</div>
					<div class="form-group">
						<label for="edit_description_{{ case.id }}">
							<i class="bi bi-file-text" style="margin-right: 5px;"></i>Description
							<small class="text-muted">(What happened? Details of the incident)</small>
						</label>
						<textarea class="form-control" id="edit_description_{{ case.id }}" name="description" rows="4" maxlength="1000" placeholder="Enter detailed description of the incident...">{{ case.description or '' }}</textarea>
					</div>
					<div class="form-group">
						<label for="edit_remarks_{{ case.id }}">
							<i class="bi bi-chat-dots" style="margin-right: 5px;"></i>Remarks
							<small class="text-muted">(Additional notes, actions taken, or comments)</small>
						</label>
						<textarea class="form-control" id="edit_remarks_{{ case.id }}" name="remarks" rows="4" maxlength="1000" placeholder="Enter additional remarks or notes...">{{ case.remarks or '' }}</textarea>
					</div>
					<!-- File Upload Section for Major Cases Only -->
					<div class="form-group">
						<label for="edit_attachment_{{ case.id }}">
							<i class="bi bi-paperclip" style="margin-right: 5px;"></i>Attachment
							<small class="text-muted">(Optional - PDF, DOC, Images, etc. Max 10MB)</small>
						</label>
						<input type="file" class="form-control-file" id="edit_attachment_{{ case.id }}" name="attachment" 
							   accept=".pdf,.doc,.docx,.txt,.jpg,.jpeg,.png,.gif,.bmp,.mp4,.avi,.mov,.wmv,.mp3,.wav,.zip,.rar,.7z">
						<small class="form-text text-muted">
							Supported formats: PDF, DOC, DOCX, TXT, JPG, PNG, MP4, MP3, ZIP, etc.
						</small>
						<!-- Show current attachment if exists -->
						{% if case.attachment_filename %}
						<div class="mt-2">
							<div class="alert alert-info">
								<i class="bi bi-paperclip" style="margin-right: 5px;"></i>
								<strong>Current attachment:</strong> {{ case.attachment_filename }}
								<small class="text-muted">({{ (case.attachment_size / 1024) | round(1) }} KB)</small>
								<div class="mt-1">
									<a href="{{ url_for('cases.download_attachment', case_id=case.id) }}" class="btn btn-sm btn-outline-primary" target="_blank">
										<i class="bi bi-download" style="margin-right: 3px;"></i>Download
									</a>
									<button type="button" class="btn btn-sm btn-outline-danger" data-case-id="{{ case.id }}" onclick="deleteAttachment(this)">
										<i class="bi bi-trash" style="margin-right: 3px;"></i>Delete
									</button>
								</div>
							</div>
						</div>
						{% endif %}
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-danger">
						<i class="bi bi-check-circle" style="margin-right: 5px;"></i>Update Case
					</button>
				</div>
			</form>
		</div>
	</div>
</div>
{% endfor %}

<!-- Delete Case Modals -->
{% for case in cases %}
<div class="modal fade" id="deleteModal-{{ case.id }}" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel-{{ case.id }}" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteModalLabel-{{ case.id }}">
					<i class="bi bi-exclamation-triangle text-danger" style="margin-right: 8px;"></i>Confirm Delete
				</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete this student case?</p>
				<div class="alert alert-warning">
					<strong>Student:</strong> {{ case.first_name }} {{ case.last_name }}<br>
					<strong>Program:</strong> {{ case.program_or_dept }} {{ case.section or '' }}<br>
					<strong>Date:</strong> {{ case.date.strftime('%Y-%m-%d') }}
				</div>
				<p class="text-danger"><strong>This action cannot be undone!</strong></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
				<form method="POST" action="{{ url_for('cases.delete_major_case', case_id=case.id) }}" style="display: inline;">
										<button type="submit" class="btn btn-danger">
						<i class="bi bi-trash" style="margin-right: 5px;"></i>Delete Case
					</button>
				</form>
			</div>
		</div>
	</div>
</div>
{% endfor %}
{% endblock %}

{% block extra_js %}
<!-- DataTables JS -->
<script src="{{ url_for('static', filename='plugins/datatables/js/jquery.dataTables.min.js') }}"></script>
<script src="{{ url_for('static', filename='plugins/datatables/js/dataTables.bootstrap4.min.js') }}"></script>
<script src="{{ url_for('static', filename='plugins/datatables/js/dataTables.responsive.min.js') }}"></script>
<script src="{{ url_for('static', filename='plugins/datatables/js/responsive.bootstrap4.min.js') }}"></script>

<script>
$(document).ready(function() {
	var table = $('#casesTable').DataTable({
		"responsive": true,
		"paging": false, // Disable pagination
		"info": false, // Hide info text
		"lengthChange": false, // Hide "Show X entries" dropdown
		"searching": false, // Disable built-in search
		"order": [[ 4, "desc" ]], // Sort by Latest Case Date descending (column 4)
		"columnDefs": [
			{ "orderable": false, "targets": [0, 1, 2, 3, 5, 6] } // Disable sorting on most columns, only allow sorting on Latest Case Date
		],
		"language": {
			"infoEmpty": "No cases available",
			"infoFiltered": ""
		}
	});
	
	// Custom search functionality
	$('#searchInput').on('keyup', function() {
		table.search(this.value).draw();
	});
	
	// Set today's date as default for new cases
	document.getElementById('date').value = new Date().toISOString().split('T')[0];
	
	// OCR Extract functionality
	// OCR Extract - Open Upload Modal
	$('#ocrExtractBtn').click(function() {
		// Reset the modal
		$('#ocrFileInput').val('');
		$('#ocrPreview').hide();
		$('#ocrProgress').hide();
		$('#ocrExtractNowBtn').prop('disabled', true);
		$('.custom-file-label').text('Choose file...');
		
		// Show the OCR Upload Modal
		$('#ocrUploadModal').modal('show');
	});
	
	// Handle file selection
	$('#ocrFileInput').on('change', function(e) {
		const file = e.target.files[0];
		if (file) {
			// Update label
			$('.custom-file-label').text(file.name);
			
			// Show preview
			$('#ocrFileName').text(file.name);
			$('#ocrPreview').show();
			
			// Enable extract button
			$('#ocrExtractNowBtn').prop('disabled', false);
		} else {
			$('#ocrPreview').hide();
			$('#ocrExtractNowBtn').prop('disabled', true);
		}
	});
	
	// Handle OCR extraction
	$('#ocrExtractNowBtn').click(function() {
		const fileInput = $('#ocrFileInput')[0];
		const file = fileInput.files[0];
		
		if (!file) {
			alert('Please select a file first.');
			return;
		}
		
		// Show progress
		$('#ocrProgress').show();
		$('#ocrExtractNowBtn').prop('disabled', true);
		
		// Prepare form data
		const formData = new FormData();
		formData.append('file', file);
		
		// Call OCR API
		$.ajax({
			url: '/ocr/upload',
			type: 'POST',
			data: formData,
			processData: false,
			contentType: false,
			success: function(response) {
				// Hide progress
				$('#ocrProgress').hide();
				
				if (response.success) {
					// Extract data from response
					const fields = response.fields || {};
					const offenders = response.offenders_identified || [];
					
					// Fill form fields
					if (fields.last_name) {
						$('#last_name').val(fields.last_name);
					}
					if (fields.first_name) {
						$('#first_name').val(fields.first_name);
					}
					
					// If offenders detected, use the first one
					if (offenders.length > 0) {
						const fullName = offenders[0];
						const nameParts = fullName.trim().split(' ');
						if (nameParts.length >= 2) {
							// Assume last word is last name, rest is first name
							const lastName = nameParts[nameParts.length - 1];
							const firstName = nameParts.slice(0, -1).join(' ');
							if (!fields.first_name) $('#first_name').val(firstName);
							if (!fields.last_name) $('#last_name').val(lastName);
						}
					}
					
					if (fields.program) {
						$('#program_or_dept').val(fields.program);
					}
					if (fields.section) {
						$('#section').val(fields.section);
					}
					if (fields.date) {
						// Try to parse and format date
						try {
							const dateStr = fields.date;
							const date = new Date(dateStr);
							if (!isNaN(date.getTime())) {
								$('#date').val(date.toISOString().split('T')[0]);
							}
						} catch(e) {
							// If date parsing fails, skip
						}
					}
					if (fields.description) {
						$('#description').val(fields.description);
					}
					
					// Close modal
					$('#ocrUploadModal').modal('hide');
					
					// Show success notification
					showNotification('success', '✓ OCR Extraction Successful!', 
						'Details extracted successfully. Please review and edit if needed.');
				} else {
					showNotification('error', '✗ OCR Extraction Failed', 
						response.error || 'Could not extract details from the file.');
				}
			},
			error: function(xhr, status, error) {
				$('#ocrProgress').hide();
				$('#ocrExtractNowBtn').prop('disabled', false);
				
				let errorMsg = 'OCR extraction failed. Please try again.';
				let errorDetails = '';
				
				if (xhr.responseJSON && xhr.responseJSON.error) {
					errorMsg = xhr.responseJSON.error;
					
					// Check if Tesseract error
					if (xhr.responseJSON.error_type === 'tesseract_not_installed') {
						errorDetails = '<br><br><strong>How to fix:</strong><br>1. Download Tesseract: <a href="https://github.com/UB-Mannheim/tesseract/wiki" target="_blank" class="text-white"><u>Click here</u></a><br>2. Install to: C:\\Program Files\\Tesseract-OCR\\<br>3. Restart Flask server<br>4. Try again';
					}
				}
				
				showNotification('error', '✗ OCR Extraction Failed', errorMsg + errorDetails);
			}
		});
	});
	
	// Notification function
	function showNotification(type, title, message) {
		const bgColor = type === 'success' ? 'bg-success' : 'bg-danger';
		const icon = type === 'success' ? 'bi-check-circle' : 'bi-x-circle';
		const autoDismiss = type === 'success' ? 5000 : 10000; // Errors stay longer
		
		const notification = $(`
			<div class="alert ${bgColor} text-white alert-dismissible fade show" role="alert" 
				 style="position: fixed; top: 80px; right: 20px; z-index: 9999; min-width: 350px; max-width: 500px; box-shadow: 0 4px 6px rgba(0,0,0,0.2);">
				<h5><i class="bi ${icon}"></i> ${title}</h5>
				<div class="mb-0">${message}</div>
				<button type="button" class="close text-white" data-dismiss="alert">
					<span>&times;</span>
				</button>
			</div>
		`);
		
		$('body').append(notification);
		
		// Auto dismiss
		setTimeout(function() {
			notification.alert('close');
		}, autoDismiss);
	}
	
	// Clear form functionality
	$('#clearFormBtn').click(function() {
		$('#addCaseModal form')[0].reset();
		document.getElementById('date').value = new Date().toISOString().split('T')[0];
	});
});

// OCR Extract for edit modals
function extractOCRForEdit(button) {
	var caseId = $(button).data('case-id');
	$.post('{{ url_for("cases.major_ocr_extract", entity_type="student") }}', function(data) {
		$('#edit_last_name_' + caseId).val(data.last_name);
		$('#edit_first_name_' + caseId).val(data.first_name);
		$('#edit_program_or_dept_' + caseId).val(data.program_or_dept);
		$('#edit_section_' + caseId).val(data.section);
		$('#edit_date_' + caseId).val(data.date);
		$('#edit_description_' + caseId).val(data.description || '');
		$('#edit_remarks_' + caseId).val(data.remarks || '');
	}).fail(function() {
		alert('OCR extraction failed. Please try again.');
	});
}

// Report Generation function
function generateReport() {
	// Get current date for filename
	var today = new Date();
	var dateStr = today.getFullYear() + '-' + 
				  String(today.getMonth() + 1).padStart(2, '0') + '-' + 
				  String(today.getDate()).padStart(2, '0');
	
	// Create a simple HTML report
	var reportContent = `
		<html>
		<head>
			<title>Major Cases - Students Report</title>
			<style>
				body { font-family: Arial, sans-serif; margin: 20px; }
				.header { text-align: center; margin-bottom: 30px; }
				table { width: 100%; border-collapse: collapse; margin-top: 20px; }
				th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
				th { background-color: #f2f2f2; }
			</style>
		</head>
		<body>
			<div class="header">
				<h1>Major Cases - Students Report</h1>
				<p>Generated on: ${today.toLocaleDateString()} at ${today.toLocaleTimeString()}</p>
			</div>
			<table>
				<thead>
					<tr>
						<th>ID</th>
						<th>Student Name</th>
						<th>Program</th>
						<th>Section</th>
						<th>Date</th>
						<th>Remarks</th>
						<th>Created</th>
					</tr>
				</thead>
				<tbody>
	`;
	
	// Add table data
	$('#casesTable tbody tr').each(function() {
		var cells = $(this).find('td');
		if (cells.length > 0) {
			reportContent += '<tr>';
			for (var i = 0; i < cells.length - 1; i++) { // Exclude Actions column
				reportContent += '<td>' + $(cells[i]).text() + '</td>';
			}
			reportContent += '</tr>';
		}
	});
	
	reportContent += `
				</tbody>
			</table>
		</body>
		</html>
	`;
	
	// Open report in new window for printing
	var reportWindow = window.open('', '_blank');
	reportWindow.document.write(reportContent);
	reportWindow.document.close();
	reportWindow.focus();
	
	// Auto-print after a short delay
	setTimeout(function() {
		reportWindow.print();
	}, 500);
}

// Load persons with case counts
function loadPersonsWithCases() {
	$.get('{{ url_for("cases.get_persons_api") }}?role=student')
		.done(function(data) {
			updatePersonsTable(data);
		})
		.fail(function() {
			alert('Error loading persons data');
		});
}

function updatePersonsTable(persons) {
	var tableBody = $('#personsTableBody');
	tableBody.empty();
	
	persons.forEach(function(person) {
		if (person.major_count > 0) { // Only show persons with major cases
			var row = '<tr style="background-color: transparent !important;">' +
				'<td><span class="person-name-clickable" style="cursor: pointer; color: #007bff; text-decoration: underline;" onclick="viewPersonCases(' + person.id + ')">' + person.full_name + '</span></td>' +
				'<td>' + (person.program_or_dept || '') + '</td>' +
				'<td>' + (person.section || '') + '</td>' +
				'<td><span style="color: #000; font-weight: bold;">' + person.major_count + '</span></td>' +
				'<td>' + (person.latest_date || 'N/A') + '</td>' +
				'<td>' + (person.has_attachment ? '<span class="badge badge-success">Attachment</span>' : '<span class="text-muted">No attachment</span>') + '</td>' +
				'<td>' +
					'<button class="btn btn-sm btn-outline-warning" onclick="editPerson(' + person.id + ')" title="Edit Person" style="margin-right: 5px;">' +
						'<i class="bi bi-pencil"></i>' +
					'</button>' +
					'<button class="btn btn-sm btn-outline-danger" onclick="deletePerson(' + person.id + ')" title="Delete Person">' +
						'<i class="bi bi-trash"></i>' +
					'</button>' +
				'</td>' +
				'</tr>';
			tableBody.append(row);
		}
	});
}


function viewPersonCases(personId) {
	$.get('{{ url_for("cases.get_person_cases_api", person_id=0) }}'.replace('0', personId) + '?case_type=major')
		.done(function(data) {
			// Update modal title and person info
			$('#personCasesModalLabel').html('<i class="bi bi-list-ul" style="margin-right: 8px;"></i>Major Cases for ' + data.person.full_name);
			
			var personInfo = '<div class="card">' +
				'<div class="card-body">' +
				'<h6 class="card-title">' + data.person.full_name + '</h6>' +
				'<p class="card-text">' +
				'<strong>Program:</strong> ' + data.person.program_or_dept + '<br>' +
				'<strong>Section:</strong> ' + data.person.section +
				'</p>' +
				'</div>' +
				'</div>';
			
		$('#personInfo').html(personInfo).data('person-id', personId);
		
		// Update cases list
		var casesHtml = '';
			if (data.cases.length === 0) {
				casesHtml = '<div class="text-center text-muted py-4">No major cases found for this student.</div>';
			} else {
				data.cases.forEach(function(case_item) {
					if (case_item.case_type === 'major') {
						var attachmentHtml = '';
						if (case_item.has_attachment) {
							attachmentHtml = '<div class="mt-2">' +
								'<span class="badge badge-info">' +
								'<i class="bi bi-paperclip" style="margin-right: 3px;"></i>' +
								'<a href="{{ url_for("cases.download_attachment", case_id=0) }}'.replace('0', case_item.id) + '" target="_blank" style="color: white; text-decoration: none;">' +
								case_item.attachment_filename + '</a>' +
								'</span>' +
								'</div>';
						}
						
						casesHtml += '<div class="card mb-2">' +
							'<div class="card-body">' +
							'<div class="d-flex justify-content-between align-items-start mb-2">' +
							'<div>' +
							'<p class="card-text mb-1"><strong>Date:</strong> ' + case_item.date_reported + '</p>' +
							(case_item.description ? '<p class="card-text mb-1"><strong>Description:</strong> ' + case_item.description + '</p>' : '') +
							(case_item.remarks ? '<p class="card-text mb-1"><strong>Remarks:</strong> ' + case_item.remarks + '</p>' : '') +
							attachmentHtml +
							'<small class="text-muted">Created: ' + case_item.created_at + '</small>' +
							'</div>' +
							'<div class="btn-group btn-group-sm" role="group">' +
							'<button class="btn btn-outline-warning" onclick="editCaseInfo(' + case_item.id + ')" title="Edit Case">' +
							'<i class="bi bi-pencil"></i>' +
							'</button>' +
							'<button class="btn btn-outline-danger" onclick="deleteCaseInfo(' + case_item.id + ')" title="Delete Case">' +
							'<i class="bi bi-trash"></i>' +
							'</button>' +
							'</div>' +
							'</div>' +
							'</div>' +
							'</div>';
					}
				});
			}
			
			$('#casesList').html(casesHtml);
			$('#personCasesModal').modal('show');
		})
		.fail(function() {
			alert('Error loading person cases');
		});
}

// Edit person function (from main table)
function editPerson(personId) {
	// Get person data and populate edit modal
	$.get('{{ url_for("cases.get_person_api", person_id=0) }}'.replace('0', personId))
		.done(function(data) {
			// Populate edit person modal
			$('#editPersonId').val(data.id);
			$('#editPersonFirstName').val(data.first_name || '');
			$('#editPersonLastName').val(data.last_name || '');
			$('#editPersonProgram').val(data.program_or_dept || '');
			$('#editPersonSection').val(data.section || '');
			
			// Show edit modal
			$('#editPersonModal').modal('show');
		})
		.fail(function() {
			alert('Error loading person data');
		});
}

// Delete person function (from main table)
function deletePerson(personId) {
	if (confirm('Are you sure you want to delete this person and all their cases?\n\nThis action cannot be undone.')) {
		// For now, just show an alert - you can implement proper delete functionality later
		alert('Delete functionality for person ID: ' + personId + '\n\nThis will delete the person and all their cases in the future.');
	}
}


// Edit case info function (from modal)
function editCaseInfo(caseId) {
	// Get current case data and populate edit modal
	$.get('{{ url_for("cases.get_case_api", case_id=0) }}'.replace('0', caseId))
		.done(function(data) {
			// Populate edit case modal
			$('#editCaseDate').val(data.date_reported);
			$('#editCaseDescription').val(data.description || '');
			$('#editCaseRemarks').val(data.remarks || '');
			$('#editCaseId').val(data.id);
			
			// Show edit modal
			$('#editCaseModal').modal('show');
		})
		.fail(function(xhr) {
			alert('Error loading case data');
		});
}

// Delete case info function (from modal)
function deleteCaseInfo(caseId) {
	// Show delete confirmation modal
	$('#deleteCaseId').val(caseId);
	$('#deleteCaseModal').modal('show');
}


$('#editCaseForm').on('submit', function(e) {
	e.preventDefault();
	e.stopPropagation();
	
	var formData = $(this).serialize();
	
	// Add timestamp to prevent caching
	var timestamp = new Date().getTime();
	var url = '{{ url_for("cases.update_case_api") }}' + '?t=' + timestamp;
	
	$.post(url, formData)
		.done(function(response) {
			// Check if response indicates success
			if (response.success === true || response.success === 'true') {
				// Close edit modal first
				$('#editCaseModal').modal('hide');
				
				// Wait for modal to close, then refresh the person cases modal
				setTimeout(function() {
					var currentPersonId = $('#personInfo').data('person-id');
					console.log('Refreshing person cases for ID:', currentPersonId);
					if (currentPersonId) {
						viewPersonCases(currentPersonId);
					}
					// Reload the main table
					loadPersonsWithCases();
					// Show success message after refresh
					alert('Case information updated successfully!');
				}, 300);
			} else {
				alert('Update failed: ' + (response.error || 'Unknown error'));
			}
		})
		.fail(function(xhr, status, error) {
			alert('Network error: ' + error + ' (Status: ' + xhr.status + ')');
		});
	
	// Prevent form submission
	return false;
});

// Handle Update Person button click
$(document).on('click', '#updatePersonBtn', function(e) {
	e.preventDefault();
	e.stopPropagation();
	
	console.log('Update Person button clicked!');
	
	// Get form data
	var formData = $('#editPersonForm').serialize();
	
	console.log('Form data being sent:', formData);
	console.log('URL:', '{{ url_for("cases.update_person_api") }}');
	
	$.post('{{ url_for("cases.update_person_api") }}', formData)
		.done(function(response) {
			console.log('Success response:', response);
			$('#editPersonModal').modal('hide');
			// Force page reload to ensure data is refreshed
			location.reload();
			// Show success message
			alert('Person information updated successfully!');
		})
		.fail(function(xhr, status, error) {
			console.log('Error response:', xhr.responseText);
			console.log('Status:', status);
			console.log('Error:', error);
			alert('Error updating person information: ' + xhr.responseText);
		});
});


function confirmDeleteCase() {
	var caseId = $('#deleteCaseId').val();
	
	$.post('{{ url_for("cases.delete_case_api", case_id=0) }}'.replace('0', caseId))
		.done(function(response) {
			$('#deleteCaseModal').modal('hide');
			// Show success message first
			alert('Case deleted successfully!');
			// Reload the main table to show updated data after a short delay
			setTimeout(function() {
				loadPersonsWithCases();
			}, 500);
		})
		.fail(function() {
			alert('Error deleting case');
		});
}


// Load data when page loads
$(document).ready(function() {
	loadPersonsWithCases();
	
	// Test if button exists
	console.log('Update Person button exists:', $('#updatePersonBtn').length > 0);
	console.log('Edit Person form exists:', $('#editPersonForm').length > 0);
	
	// Check if we need to open edit modal from URL parameters
	var urlParams = new URLSearchParams(window.location.search);
	var caseId = urlParams.get('case_id');
	var description = urlParams.get('description');
	var remarks = urlParams.get('remarks');
	var date = urlParams.get('date');
	
	if (caseId) {
		// Open edit modal with the case ID
		setTimeout(function() {
			editCaseInfo(caseId);
		}, 1000); // Delay to ensure page is loaded
	}
	
	// Refresh modal data when edit modal is shown (only once)
	$('#editCaseModal').on('show.bs.modal', function() {
		var caseId = $('#editCaseId').val();
		if (caseId) {
			// Refresh the case data to ensure it's up to date
			refreshCaseModalData(caseId);
		}
	});
});

// Function to refresh case modal data
function refreshCaseModalData(caseId) {
	$.get('{{ url_for("cases.get_case_api", case_id=0) }}'.replace('0', caseId))
		.done(function(data) {
			// Update modal fields with fresh data
			$('#editCaseDate').val(data.date_reported);
			$('#editCaseDescription').val(data.description || '');
			$('#editCaseRemarks').val(data.remarks || '');
			$('#editCaseId').val(data.id);
		})
		.fail(function(xhr) {
			// Silent fail - no need to show error for refresh
		});
}


// Function to submit the edit form (called by button click)
function submitEditForm() {
	var formData = $('#editCaseForm').serialize();
	
	// Add timestamp to prevent caching
	var timestamp = new Date().getTime();
	var url = '{{ url_for("cases.update_case_api") }}' + '?t=' + timestamp;
	
	$.post(url, formData)
		.done(function(response) {
			// Check if response indicates success
			if (response.success === true || response.success === 'true') {
				// Close edit modal first
				$('#editCaseModal').modal('hide');
				
				// Wait for modal to close, then refresh the person cases modal
				setTimeout(function() {
					var currentPersonId = $('#personInfo').data('person-id');
					console.log('Refreshing person cases for ID:', currentPersonId);
					if (currentPersonId) {
						viewPersonCases(currentPersonId);
					}
					// Reload the main table
					loadPersonsWithCases();
					// Show success message after refresh
					alert('Case information updated successfully!');
				}, 300);
			} else {
				alert('Update failed: ' + (response.error || 'Unknown error'));
			}
		})
		.fail(function(xhr, status, error) {
			alert('Network error: ' + error + ' (Status: ' + xhr.status + ')');
		});
}

// Delete attachment function
function deleteAttachment(button) {
	var caseId = $(button).data('case-id');
	if (confirm('Are you sure you want to delete this attachment?\n\nThis action cannot be undone.')) {
		$.post('{{ url_for("cases.delete_case_attachment", case_id=0) }}'.replace('0', caseId))
			.done(function(response) {
				// Reload the page to refresh the modal
				location.reload();
			})
			.fail(function() {
				alert('Error deleting attachment');
			});
	}
}
</script>

<!-- Person Cases Modal -->
<div class="modal fade" id="personCasesModal" tabindex="-1" role="dialog" aria-labelledby="personCasesModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="personCasesModalLabel">
					<i class="bi bi-list-ul" style="margin-right: 8px;"></i>Major Cases Details
				</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div id="personInfo" class="mb-3">
					<!-- Person info will be loaded here -->
				</div>
				<div class="d-flex justify-content-between align-items-center mb-3">
					<h6>Major Cases</h6>
				</div>
				<div id="casesList" class="case-details">
					<!-- Cases will be loaded here -->
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>


<!-- Edit Case Modal -->
<div class="modal fade" id="editCaseModal" tabindex="-1" role="dialog" aria-labelledby="editCaseModalLabel" aria-hidden="true" style="z-index: 1060;">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editCaseModalLabel">
					<i class="bi bi-pencil" style="margin-right: 8px;"></i>Edit Case Information
				</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form id="editCaseForm">
				<div class="modal-body">
					<input type="hidden" id="editCaseId" name="case_id">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="editCaseDate">Date <span class="text-danger">*</span></label>
								<input type="date" class="form-control" id="editCaseDate" name="date" required>
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="editCaseDescription">Description</label>
								<input type="text" class="form-control" id="editCaseDescription" name="description" maxlength="200">
							</div>
						</div>
					</div>
					<div class="form-group">
						<label for="editCaseRemarks">Remarks</label>
						<textarea class="form-control" id="editCaseRemarks" name="remarks" rows="3" maxlength="500"></textarea>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="button" class="btn btn-primary" onclick="submitEditForm()">
						<i class="bi bi-check-circle" style="margin-right: 5px;"></i>Update Case
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Delete Case Confirmation Modal -->
<div class="modal fade" id="deleteCaseModal" tabindex="-1" role="dialog" aria-labelledby="deleteCaseModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteCaseModalLabel">
					<i class="bi bi-exclamation-triangle text-danger" style="margin-right: 8px;"></i>Confirm Delete Case
				</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<input type="hidden" id="deleteCaseId" name="case_id">
				<p>Are you sure you want to delete this case?</p>
				<div class="alert alert-warning">
					<strong>Warning:</strong> This action will permanently delete the case record.
				</div>
				<p class="text-danger"><strong>This action cannot be undone!</strong></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" onclick="confirmDeleteCase()">
					<i class="bi bi-trash" style="margin-right: 5px;"></i>Delete Case
				</button>
			</div>
		</div>
	</div>
</div>

<!-- OCR Upload Modal -->
<div class="modal fade" id="ocrUploadModal" tabindex="-1" role="dialog" aria-labelledby="ocrUploadModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header bg-info text-white">
				<h5 class="modal-title" id="ocrUploadModalLabel">
					<i class="bi bi-camera" style="margin-right: 8px;"></i>OCR Extract - Upload Complaint Form
				</h5>
				<button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div class="alert alert-info">
					<i class="bi bi-info-circle" style="margin-right: 5px;"></i>
					<strong>Upload a complaint form</strong> (image or PDF) to automatically extract student information.
				</div>
				
				<div class="form-group">
					<label for="ocrFileInput">
						Select File <span class="text-danger">*</span>
						<small class="text-muted">(PNG, JPG, PDF, DOCX)</small>
					</label>
					<div class="custom-file">
						<input type="file" class="custom-file-input" id="ocrFileInput" accept=".png,.jpg,.jpeg,.pdf,.docx">
						<label class="custom-file-label" for="ocrFileInput">Choose file...</label>
					</div>
					<small class="form-text text-muted">Maximum file size: 10MB</small>
				</div>
				
				<div id="ocrPreview" class="mt-3" style="display: none;">
					<div class="alert alert-success">
						<i class="bi bi-check-circle" style="margin-right: 5px;"></i>
						File selected: <strong id="ocrFileName"></strong>
					</div>
				</div>
				
				<div id="ocrProgress" class="mt-3" style="display: none;">
					<div class="progress">
						<div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%">
							Extracting...
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-info" id="ocrExtractNowBtn" disabled>
					<i class="bi bi-magic" style="margin-right: 5px;"></i>Extract Details
				</button>
			</div>
		</div>
	</div>
</div>

<!-- Edit Person Modal -->
<div class="modal fade" id="editPersonModal" tabindex="-1" role="dialog" aria-labelledby="editPersonModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editPersonModalLabel">
					<i class="bi bi-pencil" style="margin-right: 8px;"></i>Edit Person Information
				</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form id="editPersonForm">
				<div class="modal-body">
					<input type="hidden" id="editPersonId" name="person_id">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="editPersonFirstName">First Name <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="editPersonFirstName" name="first_name" required maxlength="100">
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="editPersonLastName">Last Name <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="editPersonLastName" name="last_name" required maxlength="100">
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="editPersonProgram">Program/Department <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="editPersonProgram" name="program_or_dept" required maxlength="100">
							</div>
						</div>
						<div class="col-md-6">
							<div class="form-group">
								<label for="editPersonSection">Section <span class="text-danger">*</span></label>
								<input type="text" class="form-control" id="editPersonSection" name="section" required maxlength="50">
							</div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="button" class="btn btn-primary" id="updatePersonBtn">
						<i class="bi bi-check-circle" style="margin-right: 5px;"></i>Update Person
					</button>
				</div>
			</form>
		</div>
	</div>
</div>
{% endblock %}
